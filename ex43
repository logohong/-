#-*-coding:utf-8 -*-

from sys import exit
from random import randint


class Scene(object):

    def enter(self):
        print "This scene is not yet configured. Subclass it and implement enter()."
        exit(0)
#正如你在框架代码里看到的，我创建了基础类Scene,它将包含所有scene要做的所有的事。在这段代码中，它们并没有做什么，
# 所以这只是给你的一个如果创建基类的示范。
class Engine(object):
    def __init__(self,scene_map): # scene_map 当前场景
        self.scene_map = scene_map

    def play(self):
        current_scene = self.scene_map.opening_scene()  # current_scene 当前的场景
        last_scene = self.scene_map.next_scene('finished')

        while current_scene != last_scene:
            next_scene_name = current_scene.enter()
            current_scene = self.scene_map.next_scene(next_scene_name)

        current_scene.enter()

class Death(Scene):

    quips = ["你死了！","你真的死了","你失败了"]

    def enter(self):
        print Death.quips[randint(0,len(self.quips)-1)]
        exit(1)

class CentralCorridor(Scene):
    def enter(self):
        pass

    print "欢迎来到中枢"
    print "你现在可以有几条路可以选"

class LaserWeaponArmory(Scene):
    def enter(self):
        pass

class TheBridge(Scene):
    def enter(self):
        pass

class EscapePod(Scene):
    def enter(self):
        pass

class Map(object): # 等同于Maze 迷宫
    def __init__(self,start_scene):
        pass

    def next_scene(self,scene_name):
        pass

    def opening_scene(self):
        pass


a_map = Map('central corridor')
a_game = Engine(a_map)
a_game.play()


